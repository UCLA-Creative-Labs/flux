{"version":3,"sources":["firebaseWrapper.js","components/Login/index.jsx","components/NewsFeed/MakePost.jsx","components/NewsFeed/Post.jsx","components/NewsFeed/index.jsx","components/MessagingWindow/Message.jsx","components/MessagingWindow/index.jsx","components/MessageManager/index.jsx","components/ProfilePage/FriendsList.jsx","components/ProfilePage/index.jsx","components/Navbar/index.jsx","App.jsx","index.jsx","config/firebase.js"],"names":["uploadPost","userId","text","photoUrl","time","postsRef","firebase","database","ref","post","likes","timestamp","Intl","DateTimeFormat","year","month","day","hour","minute","format","photo","push","listenForPosts","done","on","snapshot","val","firebaseWrapper","initialize","apps","length","initializeApp","firebaseConfig","listenForAuthStateChange","onLogin","onLogout","auth","onAuthStateChanged","user","concat","uid","update","profilePicture","photoURL","updateProfilePicture","logout","signOut","sendMessage","conversationId","message","listenForMessages","prevRef","undefined","off","conversationRef","sendPost","Date","now","storageRef","storage","child","put","then","getDownloadURL","incrementLike","postId","likedPostsRef","alreadyLiked","once","forEach","childSnapshot","listenForFriends","friendsRef","friends","addFriend","userId1","userId2","user1FriendsRef","user2FriendsRef","newConversationRef","key","createConversation","friendForUser1","Object","defineProperty","friendForUser2","listenForUserPosts","posts","userPostIds","keys","filter","userPosts","listenForLikedPosts","postsBranch","likedPostIds","values","likedPosts","getProfilePicture","Login","uiConfig","signInSuccessUrl","signInOptions","GoogleAuthProvider","PROVIDER_ID","FacebookAuthProvider","EmailAuthProvider","firebaseui","AuthUI","getInstance","start","react_default","a","createElement","id","Component","MakePost","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","textInputHandler","event","setState","target","value","fileUploadHandler","pic","document","getElementById","files","postSubmitHandler","_this$state","state","preventDefault","className","type","placeholder","onChange","accept","onClick","React","Post","_ref","postObject","src","alt","NewsFeed","_this2","_this3","profileId","updatePosts","_this$props","components_NewsFeed_MakePost","reverse","map","components_NewsFeed_Post","defaultProps","styles","sent","width","backgroundColor","received","Message","styling","style","MessagingWindow","handleChange","e","handleClick","messages","prevConversationRef","nextProps","_this$props2","messageId","MessagingWindow_Message","MessageManager","handleFriendClick","friend","activeConversation","newFriendsRef","_this4","friendId","components_MessagingWindow","FriendsList","ProfilePage","match","params","handleLogout","ProfilePage_FriendsList","components_NewsFeed","Navbar","react_router_dom","to","App","setTimeout","redirectLocation","window","location","href","replace","routes","react_router","exact","path","component","components_Navbar","render","components_MessageManager","components_ProfilePage","assign","ReactDOM","src_App_0","module","exports","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId"],"mappings":"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","file":"static/js/main.7352cdf6.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport { firebaseConfig } from \"./config/firebase\";\n\n/**\n * Helper Functions\n */\nconst isInitialized = () => {\n  return !(firebase.apps.length === 0);\n};\n\nconst uploadPost = (userId, text, photoUrl, time) => {\n  const postsRef = firebase.database().ref(\"posts\");\n\n  const post = {\n    userId,\n    text,\n    likes: 0,\n    timestamp: new Intl.DateTimeFormat(\"en-US\", {\n      year: \"numeric\",\n      month: \"2-digit\",\n      day: \"2-digit\",\n      hour: \"2-digit\",\n      minute: \"2-digit\"\n    }).format(time)\n  };\n  if (photoUrl !== null) {\n    post.photo = photoUrl;\n  }\n\n  return postsRef.push(post);\n};\n\nconst createConversation = (userId, done) => {\n  const conversationsRef = firebase.database().ref(\"conversations\");\n  const newConversationRef = conversationsRef.push();\n  const messagesRef = newConversationRef.child(\"messages\");\n\n  const message = { text: \"Test Initial message\", userId };\n\n  messagesRef.push(message).then(done(newConversationRef.key));\n};\n\nconst updateProfilePicture = user => {\n  const userRef = firebase.database().ref(`users/${user.uid}`);\n  userRef.update({\n    profilePicture: user.photoURL\n  });\n};\n\n/**\n * App Functions\n */\nconst initialize = () => {\n  if (!isInitialized()) {\n    firebase.initializeApp(firebaseConfig);\n  }\n};\n\n/**\n * Auth Functions\n */\nconst listenForAuthStateChange = (onLogin, onLogout) => {\n  firebase.auth().onAuthStateChanged(user => {\n    if (user) {\n      updateProfilePicture(user);\n      onLogin(user);\n    } else {\n      onLogout();\n    }\n  });\n};\n\nconst logout = () => {\n  firebase.auth().signOut();\n};\n\n/**\n * Messaging Functions\n */\nconst sendMessage = (conversationId, message) => {\n  const conversationRef = firebase\n    .database()\n    .ref(`/conversations/${conversationId}/messages/`);\n  conversationRef.push(message);\n};\n\nconst listenForMessages = (prevRef, conversationId, done) => {\n  if (prevRef !== null && prevRef !== undefined) {\n    prevRef.off();\n  }\n  const conversationRef = firebase\n    .database()\n    .ref(`/conversations/${conversationId}/messages/`);\n  conversationRef.on(\"value\", snapshot => {\n    done(snapshot.val(), conversationRef);\n  });\n};\n\n/**\n * Post Functions\n */\nconst sendPost = (userId, text, photo, done) => {\n  const time = Date.now();\n\n  if (photo !== null) {\n    const storageRef = firebase\n      .storage()\n      .ref()\n      .child(`users/${userId}${time}.jpg`);\n    storageRef.put(photo).then(() => {\n      storageRef.getDownloadURL().then(photoUrl => {\n        uploadPost(userId, text, photoUrl, time).then(done);\n      });\n    });\n  } else {\n    uploadPost(userId, text, photo, time).then(done);\n  }\n};\n\nconst listenForPosts = done => {\n  const postsRef = firebase.database().ref(\"posts\");\n\n  postsRef.on(\"value\", snapshot => {\n    done(snapshot.val());\n  });\n};\n\nconst incrementLike = (likes, postId, userId) => {\n  const postsRef = firebase.database().ref(\"posts\");\n  const likedPostsRef = firebase\n    .database()\n    .ref(\"users\")\n    .child(userId)\n    .child(\"/likedPosts\");\n\n  let alreadyLiked = false;\n  likedPostsRef.once(\"value\", snapshot => {\n    snapshot.forEach(childSnapshot => {\n      if (childSnapshot.val() === postId) {\n        alreadyLiked = true;\n      }\n    });\n    if (alreadyLiked === false) {\n      likedPostsRef.push(postId);\n      postsRef.child(postId).update({ likes: likes + 1 });\n    }\n  });\n};\n\n/**\n * User Functions\n */\nconst listenForFriends = (userId, done) => {\n  const friendsRef = firebase.database().ref(`users/${userId}/friends/`);\n  friendsRef.on(\"value\", snapshot => {\n    let friends = snapshot.val();\n\n    if (friends === null) {\n      friends = {};\n    }\n    done(friends, friendsRef);\n  });\n};\n\nconst addFriend = (userId1, userId2) => {\n  const user1FriendsRef = firebase.database().ref(`/users/${userId1}/friends`);\n  const user2FriendsRef = firebase.database().ref(`/users/${userId2}/friends`);\n\n  createConversation(userId1, conversationId => {\n    const friendForUser1 = { [userId2]: conversationId };\n    const friendForUser2 = { [userId1]: conversationId };\n\n    user1FriendsRef.update(friendForUser1);\n    user2FriendsRef.update(friendForUser2);\n  });\n};\n\nconst listenForUserPosts = (userId, done) => {\n  listenForPosts(posts => {\n    const userPostIds = Object.keys(posts).filter(\n      postId => posts[postId].userId === userId\n    );\n\n    const userPosts = {};\n    userPostIds.forEach(postId => {\n      userPosts[postId] = posts[postId];\n    });\n\n    done(userPosts);\n  });\n};\n\nconst listenForLikedPosts = (userId, done) => {\n  const likedPostsRef = firebase.database().ref(`users/${userId}/likedPosts/`);\n\n  likedPostsRef.on(\"value\", snapshot => {\n    let postsBranch = snapshot.val();\n    if (postsBranch === null) {\n      postsBranch = {};\n    }\n\n    const likedPostIds = Object.values(postsBranch);\n\n    listenForPosts(posts => {\n      const likedPosts = {};\n      likedPostIds.forEach(postId => {\n        likedPosts[postId] = posts[postId];\n      });\n\n      done(likedPosts);\n    });\n  });\n};\n\nconst getProfilePicture = (userId, done) => {\n  const picRef = firebase.database().ref(`users/${userId}/profilePicture`);\n  picRef.once(\"value\", snapshot => {\n    done(snapshot.val());\n  });\n};\n\nexport default {\n  initialize,\n  listenForAuthStateChange,\n  logout,\n\n  sendMessage,\n  listenForMessages,\n\n  sendPost,\n  listenForPosts,\n  incrementLike,\n\n  listenForFriends,\n  addFriend,\n  listenForUserPosts,\n  listenForLikedPosts,\n  getProfilePicture\n};\n","import React, { Component } from \"react\";\nimport firebase from \"firebase\";\nimport firebaseui from \"firebaseui\";\n\nclass Login extends Component {\n  componentDidMount() {\n    const uiConfig = {\n      signInSuccessUrl: \"/\",\n      signInOptions: [\n        firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n        firebase.auth.FacebookAuthProvider.PROVIDER_ID,\n        firebase.auth.EmailAuthProvider.PROVIDER_ID\n      ]\n    };\n\n    const ui =\n      firebaseui.auth.AuthUI.getInstance() ||\n      new firebaseui.auth.AuthUI(firebase.auth());\n    ui.start(\"#firebaseui-auth-container\", uiConfig);\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Login Page</h1>\n        <div id=\"firebaseui-auth-container\" />\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport firebaseWrapper from \"../../firebaseWrapper\";\nimport \"./MakePost.css\";\n\nclass MakePost extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: \"\",\n      photo: null\n    };\n  }\n\n  textInputHandler = event => {\n    this.setState({ text: event.target.value });\n  };\n\n  fileUploadHandler = () => {\n    const pic = document.getElementById(\"fileItem\").files[0];\n    this.setState({ photo: pic });\n  };\n\n  postSubmitHandler = event => {\n    const resetState = () => {\n      this.setState({ text: \"\", photo: null });\n    };\n    const { userId } = this.props;\n    const { photo, text } = this.state;\n    event.preventDefault();\n\n    firebaseWrapper.sendPost(userId, text, photo, resetState);\n  };\n\n  render() {\n    const { text } = this.state;\n    return (\n      <div className=\"MakePost\">\n        <h1>Make a Post</h1>\n        <textarea\n          className=\"post\"\n          type=\"text\"\n          value={text}\n          placeholder=\"Type something...\"\n          onChange={this.textInputHandler}\n        />\n\n        <input\n          id=\"fileItem\"\n          type=\"file\"\n          accept=\"image/*\"\n          onChange={this.fileUploadHandler}\n        />\n\n        <button type=\"submit\" onClick={this.postSubmitHandler}>\n          Post\n        </button>\n      </div>\n    );\n  }\n}\n\nMakePost.propTypes = {\n  userId: PropTypes.string.isRequired\n};\n\nexport default MakePost;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport firebaseWrapper from \"../../firebaseWrapper\";\nimport \"./Post.css\";\n\nconst Post = ({ postId, postObject, userId }) => (\n  <div className=\"post\">\n    <p>post: {postId}</p>\n    <p>user_id: {postObject.userId}</p>\n    <p>timestamp: {postObject.timestamp}</p>\n    <p>text: {postObject.text}</p>\n    <p>\n      <img className=\"photo\" src={postObject.photo} alt=\"\" />\n    </p>\n    <p>likes: {postObject.likes}</p>\n    <button\n      type=\"submit\"\n      onClick={() => {\n        firebaseWrapper.incrementLike(postObject.likes, postId, userId);\n      }}\n    >\n      Like!\n    </button>\n  </div>\n);\n\nPost.propTypes = {\n  postObject: PropTypes.shape({\n    userID: PropTypes.number,\n    timestamp: PropTypes.string,\n    text: PropTypes.string,\n    photo: PropTypes.string,\n    likes: PropTypes.number\n  }).isRequired,\n  postId: PropTypes.string.isRequired,\n  userId: PropTypes.string.isRequired\n};\n\nexport default Post;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport firebaseWrapper from \"../../firebaseWrapper\";\nimport MakePost from \"./MakePost\";\nimport Post from \"./Post\";\n\nclass NewsFeed extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      posts: {}\n    };\n  }\n\n  componentDidMount() {\n    const { type } = this.props;\n\n    const updatePosts = posts => {\n      this.setState({\n        posts\n      });\n    };\n\n    if (type === \"home\") {\n      firebaseWrapper.listenForPosts(updatePosts);\n    }\n  }\n\n  componentWillReceiveProps(props) {\n    const { type, profileId } = props;\n\n    const updatePosts = posts => {\n      this.setState({\n        posts\n      });\n    };\n\n    if (type === \"user\") {\n      firebaseWrapper.listenForUserPosts(profileId, updatePosts);\n    } else if (type === \"liked\") {\n      firebaseWrapper.listenForLikedPosts(profileId, updatePosts);\n    }\n  }\n\n  render() {\n    const { posts } = this.state;\n    const { userId, type } = this.props;\n    return (\n      <div>\n        {type === \"home\" && <MakePost userId={userId} />}\n        {Object.keys(posts)\n          .reverse()\n          .map(postId => (\n            <Post\n              key={postId}\n              postId={postId}\n              postObject={posts[postId]}\n              userId={userId}\n            />\n          ))}\n      </div>\n    );\n  }\n}\n\nNewsFeed.defaultProps = {\n  profileId: \"\"\n};\n\nNewsFeed.propTypes = {\n  userId: PropTypes.string.isRequired,\n  profileId: PropTypes.string,\n  type: PropTypes.oneOf([\"home\", \"user\", \"liked\"]).isRequired\n};\nexport default NewsFeed;\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst styles = {\r\n  sent: {\r\n    width: \"40%\",\r\n    backgroundColor: \"blue\"\r\n  },\r\n  received: {\r\n    width: \"40%\",\r\n    backgroundColor: \"white\"\r\n  }\r\n};\r\n\r\nfunction Message({ text, sent }) {\r\n  const styling = sent ? styles.sent : styles.received;\r\n  return <div style={styling}>{text}</div>;\r\n}\r\n\r\nMessage.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n  sent: PropTypes.bool.isRequired\r\n};\r\n\r\nexport default Message;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport firebaseWrapper from \"../../firebaseWrapper\";\r\nimport Message from \"./Message\";\r\n\r\nclass MessagingWindow extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      messages: [],\r\n      text: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { conversationId } = this.props;\r\n    const { prevConversationRef } = this.state;\r\n\r\n    const updateMessages = (messages, prevRef) => {\r\n      this.setState({\r\n        messages,\r\n        prevConversationRef: prevRef\r\n      });\r\n    };\r\n\r\n    firebaseWrapper.listenForMessages(\r\n      prevConversationRef,\r\n      conversationId,\r\n      updateMessages\r\n    );\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    const { conversationId } = nextProps;\r\n    const { prevConversationRef } = this.state;\r\n\r\n    const updateMessages = (messages, prevRef) => {\r\n      this.setState({\r\n        messages,\r\n        prevConversationRef: prevRef\r\n      });\r\n    };\r\n\r\n    firebaseWrapper.listenForMessages(\r\n      prevConversationRef,\r\n      conversationId,\r\n      updateMessages\r\n    );\r\n  }\r\n\r\n  handleChange = e => {\r\n    this.setState({ text: e.target.value });\r\n  };\r\n\r\n  handleClick = e => {\r\n    e.preventDefault();\r\n\r\n    const { text } = this.state;\r\n    const { userId, conversationId } = this.props;\r\n    const message = { text, userId };\r\n    firebaseWrapper.sendMessage(conversationId, message);\r\n    this.setState({\r\n      text: \"\"\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { text, messages } = this.state;\r\n    const { userId, conversationId } = this.props;\r\n\r\n    return (\r\n      <div>\r\n        <h1>Temporary Messaging Window</h1>\r\n        <h1>{conversationId}</h1>\r\n\r\n        {/* Display all messages */}\r\n        {Object.keys(messages).map(messageId =>\r\n          messages[messageId].userId === userId ? (\r\n            <Message key={messageId} text={messages[messageId].text} sent />\r\n          ) : (\r\n            <Message\r\n              key={messageId}\r\n              text={messages[messageId].text}\r\n              sent={false}\r\n            />\r\n          )\r\n        )}\r\n        {/* A Simple form with one text field and one submit button to send a message */}\r\n        <form>\r\n          <input type=\"text\" onChange={this.handleChange} value={text} />\r\n          <button onClick={this.handleClick} type=\"submit\">\r\n            Send!\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nMessagingWindow.propTypes = {\r\n  userId: PropTypes.string.isRequired,\r\n  conversationId: PropTypes.string.isRequired\r\n};\r\n\r\nexport default MessagingWindow;\r\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport firebaseWrapper from \"../../firebaseWrapper\";\nimport MessagingWindow from \"../MessagingWindow/index\";\nimport \"./styles.css\";\n\nclass MessageManager extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      friends: {},\n      activeConversation: null\n    };\n  }\n\n  componentDidMount() {\n    const { userId } = this.props;\n    const { friendsRef } = this.state;\n\n    if (friendsRef === undefined) {\n      const updateFriends = (friends, newFriendsRef) => {\n        this.setState({\n          friends,\n          friendsRef: newFriendsRef\n        });\n      };\n      firebaseWrapper.listenForFriends(userId, updateFriends);\n    }\n  }\n\n  componentWillReceiveProps(props) {\n    const { userId } = props;\n    const { friendsRef } = this.state;\n\n    if (friendsRef === undefined) {\n      const updateFriends = (friends, newFriendsRef) => {\n        this.setState({\n          friends,\n          friendsRef: newFriendsRef\n        });\n      };\n      firebaseWrapper.listenForFriends(userId, updateFriends);\n    }\n  }\n\n  handleFriendClick = friend => {\n    this.setState({\n      activeConversation: friend\n    });\n  };\n\n  render() {\n    const { friends, activeConversation } = this.state;\n    const { userId } = this.props;\n\n    return (\n      <div>\n        {/* <h1>Temporary Message Manager</h1> */}\n\n        {/* List of friends */}\n        {Object.keys(friends).map(friendId => (\n          <div key={friendId}>\n            <button\n              className=\"friend-name\"\n              type=\"button\"\n              onClick={() => this.handleFriendClick(friendId)}\n            >\n              Friend {friendId}\n            </button>\n          </div>\n        ))}\n\n        {activeConversation != null ? (\n          <MessagingWindow\n            userId={userId}\n            conversationId={friends[activeConversation]}\n          />\n        ) : (\n          <p> Click a friend to get started! </p>\n        )}\n      </div>\n    );\n  }\n}\n\nMessageManager.propTypes = {\n  userId: PropTypes.string.isRequired\n};\n\nexport default MessageManager;\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst FriendsList = ({ friends }) => {\r\n  return (\r\n    <div>\r\n      Friends:\r\n      {Object.keys(friends).map(friendId => (\r\n        <p key={friendId}>{friendId}</p>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nFriendsList.propTypes = {\r\n  friends: PropTypes.shape({}).isRequired\r\n};\r\n\r\nexport default FriendsList;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport FriendsList from \"./FriendsList\";\r\nimport NewsFeed from \"../NewsFeed\";\r\nimport firebaseWrapper from \"../../firebaseWrapper\";\r\n\r\nclass ProfilePage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      //   likedPosts: [],\r\n      //   userPosts: [],\r\n      friends: {}\r\n      //   activeTab: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { match } = this.props;\r\n    const { params } = match;\r\n    const { profileId } = params;\r\n\r\n    const updateProfilePicture = profilePicture => {\r\n      this.setState({\r\n        profilePicture\r\n      });\r\n    };\r\n    const updateFriends = friends => {\r\n      this.setState({\r\n        friends\r\n      });\r\n    };\r\n\r\n    firebaseWrapper.getProfilePicture(profileId, updateProfilePicture);\r\n    firebaseWrapper.listenForFriends(profileId, updateFriends);\r\n  }\r\n\r\n  addFriend = () => {\r\n    const {\r\n      userId,\r\n      match: {\r\n        params: { profileId }\r\n      }\r\n    } = this.props;\r\n\r\n    firebaseWrapper.addFriend(userId, profileId);\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      userId,\r\n      handleLogout,\r\n      match: {\r\n        params: { profileId }\r\n      }\r\n    } = this.props;\r\n    const { friends, profilePicture } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <div>\r\n          <button type=\"submit\" onClick={handleLogout}>\r\n            Logout\r\n          </button>\r\n        </div>\r\n\r\n        <img src={profilePicture} alt=\"Profile\" />\r\n\r\n        <h1>{profileId}</h1>\r\n        {profileId !== userId && !(userId in friends) ? (\r\n          <button type=\"button\" onClick={this.addFriend}>\r\n            Add Friend\r\n          </button>\r\n        ) : (\r\n          <div />\r\n        )}\r\n        <FriendsList friends={friends} />\r\n\r\n        <div>\r\n          <h2>User Posts</h2>\r\n          <NewsFeed userId={userId} profileId={profileId} type=\"user\" />\r\n        </div>\r\n\r\n        <div>\r\n          <h2>Liked Posts</h2>\r\n          <NewsFeed userId={userId} profileId={profileId} type=\"liked\" />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProfilePage.propTypes = {\r\n  match: PropTypes.shape({}).isRequired,\r\n  userId: PropTypes.string.isRequired,\r\n  handleLogout: PropTypes.func.isRequired\r\n};\r\n\r\nexport default ProfilePage;\r\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\nconst Navbar = ({ userId }) => {\n  return (\n    <nav>\n      <Link to=\"/newsfeed\">Home</Link>\n      <Link to=\"/messages\">Messages</Link>\n      <Link to={`/user/${userId}`}>Profile</Link>\n    </nav>\n  );\n};\n\nNavbar.propTypes = {\n  userId: PropTypes.string.isRequired\n};\n\nexport default Navbar;\n","import React, { Component } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch\n} from \"react-router-dom\";\nimport firebaseWrapper from \"./firebaseWrapper\";\n\nimport Login from \"./components/Login\";\nimport NewsFeed from \"./components/NewsFeed\";\nimport MessageManager from \"./components/MessageManager\";\nimport ProfilePage from \"./components/ProfilePage\";\nimport Navbar from \"./components/Navbar\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    firebaseWrapper.initialize();\n\n    this.state = {\n      userId: \"\"\n    };\n  }\n\n  componentDidMount() {\n    const onLogin = user => {\n      this.setState({ userId: user.uid });\n    };\n    const onLogout = () => {\n      this.setState({ userId: \"\" });\n    };\n\n    firebaseWrapper.listenForAuthStateChange(onLogin, onLogout);\n  }\n\n  handleLogout = event => {\n    event.preventDefault();\n    firebaseWrapper.logout();\n\n    setTimeout(() => {\n      const redirectLocation = window.location.href.match(/.*\\/\\/.*?\\//)[0];\n      window.location.replace(redirectLocation);\n    }, 100);\n  };\n\n  render() {\n    const { userId } = this.state;\n\n    let routes;\n\n    if (userId === \"\") {\n      routes = (\n        <Router>\n          <Switch>\n            <Route exact path=\"/\" component={Login} />\n          </Switch>\n        </Router>\n      );\n    } else {\n      routes = (\n        <Router>\n          <Navbar userId={userId} />\n          <Route exact path=\"/\" render={() => <Redirect to=\"/newsfeed\" />} />\n          {/* Change to `userId=\"1234\"` if testing */}\n          <Route\n            path=\"/newsfeed\"\n            render={() => <NewsFeed userId={userId} type=\"home\" />}\n          />\n          <Route\n            path=\"/messages\"\n            exact\n            render={() => <MessageManager userId={userId} />}\n          />\n          <Route\n            path=\"/user/:profileId\"\n            render={props => (\n              <ProfilePage\n                userId={userId}\n                handleLogout={this.handleLogout}\n                {...props}\n              />\n            )}\n          />\n        </Router>\n      );\n    }\n\n    return (\n      <div className=\"App\">\n        <p>Your userId is {userId}</p>\n\n        {routes}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","const firebaseConfig = {\n  apiKey: \"AIzaSyBpvV3UxNK--GI_Q0WFojfrjRPSyqLNt1Q\",\n  authDomain: \"flux-238200.firebaseapp.com\",\n  databaseURL: \"https://flux-238200.firebaseio.com\",\n  projectId: \"flux-238200\",\n  storageBucket: \"flux-238200.appspot.com\",\n  messagingSenderId: \"103830355664\"\n};\n\nmodule.exports = { firebaseConfig };\n"],"sourceRoot":""}